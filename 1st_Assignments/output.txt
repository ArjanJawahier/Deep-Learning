
The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0100.
Settings:        relu,     RMSprop, Test accuracy: 0.0100.
Settings:        relu,         SGD, Test accuracy: 0.0100.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0100.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0299.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0299.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0299.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0299.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0299.
Settings:        relu,     RMSprop, Test accuracy: 0.0100.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0299.
Settings:        relu,     RMSprop, Test accuracy: 0.0100.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0299.
Settings:        relu,     RMSprop, Test accuracy: 0.0100.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0299.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0299.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0299.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0299.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0299.
Settings:        relu,     RMSprop, Test accuracy: 0.0100.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0100.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0299.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0299.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0299.
Settings:        relu,     RMSprop, Test accuracy: 0.0100.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0299.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0299.
Settings:        relu,     RMSprop, Test accuracy: 0.0100.
Settings:        relu,         SGD, Test accuracy: 0.0100.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0299.
Settings:        relu,     RMSprop, Test accuracy: 0.0100.
Settings:        relu,         SGD, Test accuracy: 0.0100.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0299.
Settings:        relu,     RMSprop, Test accuracy: 0.0100.
Settings:        relu,         SGD, Test accuracy: 0.0100.
Settings:        relu,         SGD, Test accuracy: 0.0100.
Settings:        tanh,        Adam, Test accuracy: 0.0580.
Settings:        tanh,     RMSprop, Test accuracy: 0.0100.
Settings:        tanh,         SGD, Test accuracy: 0.0102.
Settings:        tanh,         SGD, Test accuracy: 0.0105.
Settings:    hardtanh,        Adam, Test accuracy: 0.0591.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=576, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0100.
Settings:        relu,     RMSprop, Test accuracy: 0.0100.
Settings:        relu,         SGD, Test accuracy: 0.0100.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).


The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0100.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0100.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0100.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))), ('pool', MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)), ('conv2', Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))), ('fc1', Linear(in_features=400, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))), ('pool', MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)), ('conv2', Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))), ('fc1', Linear(in_features=400, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0100.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))), ('pool', MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)), ('conv2', Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))), ('fc1', Linear(in_features=400, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0100.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))), ('pool', MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)), ('conv2', Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))), ('fc1', Linear(in_features=400, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))), ('pool', MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)), ('conv2', Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))), ('fc1', Linear(in_features=400, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).
Settings:        relu,        Adam, Test accuracy: 0.0100.

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))), ('pool', MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)), ('conv2', Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))), ('conv3', Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))), ('fc1', Linear(in_features=400, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))), ('pool', MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)), ('conv2', Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))), ('fc1', Linear(in_features=400, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))), ('pool', MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)), ('conv2', Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))), ('fc1', Linear(in_features=400, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))), ('pool', MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)), ('conv2', Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))), ('fc1', Linear(in_features=400, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).

The following tests were done with net: Net(OrderedDict([('conv1', Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1))), ('conv2', Conv2d(18, 54, kernel_size=(3, 3), stride=(1, 1))), ('fc1', Linear(in_features=1944, out_features=120, bias=True)), ('fc2', Linear(in_features=120, out_features=84, bias=True)), ('fc3', Linear(in_features=84, out_features=84, bias=True)), ('fc4', Linear(in_features=84, out_features=100, bias=True))])).
